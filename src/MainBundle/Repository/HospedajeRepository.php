<?php

namespace MainBundle\Repository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * HospedajeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HospedajeRepository extends \Doctrine\ORM\EntityRepository
{
    /*
	 * FunciÃ³n que devuelve todos los hospedajes paginados
	 */
    public function listarHospedajesPaginados($pageSize, $currentPage) {
        $em = $this->getEntityManager();
        $dql = 'SELECT h, h.imagen1, h.imagen2, h.imagen3, h.imagen4, h.imagen5, h.borrado, h.titulo, h.id, h.direccion, h.localidad, h.descripcion, h.capacidad, th.nombre as tipoHosp
                FROM MainBundle:Hospedaje h
                INNER JOIN MainBundle:TipoHospedaje th WITH h.tipohospedaje = th.id
                WHERE th.borrado = 0
                ORDER BY h.titulo DESC';
        $query = $em->createQuery($dql)
            ->setFirstResult($pageSize * ($currentPage - 1))
            ->setMaxResults($pageSize);

        $paginator = new Paginator($query);

        return $paginator;
    }

    public function findHospedajeUsuario($id) {
        $dql = 'SELECT  h, h.imagen1, h.imagen2, h.imagen3, h.imagen4, h.imagen5, h.borrado, h.titulo, h.id, h.direccion, h.localidad, h.descripcion, h.capacidad, th.nombre as tipoHosp
                FROM MainBundle:Hospedaje h 
                INNER JOIN MainBundle:TipoHospedaje th WITH h.tipohospedaje = th.id 
                INNER JOIN MainBundle:Favorito f WITH f.hospedaje = h.id
                WHERE f.usuario = :id
                ORDER BY h.titulo';
        return $this->getEntityManager()
            ->createQuery($dql)
            ->setParameter(':id', $id)
            ->getResult();
    }


    public function findDetalleHospedaje($id) {
        $dql = 'SELECT h, h.imagen1, h.imagen2, h.imagen3, h.imagen4, h.imagen5, h.borrado, h.titulo, h.id, h.descripcion, h.localidad, h.capacidad, h.direccion,
                th.nombre as tipoHosp, u.nombre as userNom, u.apellido as userApe, u.id as userId
                FROM MainBundle:Hospedaje h 
                INNER JOIN MainBundle:TipoHospedaje th WITH h.tipohospedaje = th.id 
                INNER JOIN MainBundle:Usuario u WITH h.usuario = u.id 
                WHERE h.id = :id';
        return $this->getEntityManager()
            ->createQuery($dql)
            ->setParameter(':id', $id)
            ->getOneOrNullResult();
    }

    public function buscarHospPaginated($pageSize, $currentPage, $desde, $hasta) {
        $em = $this->getEntityManager();
        $dql = "SELECT h, h.imagen1, h.imagen2, h.imagen3, h.imagen4, h.imagen5, h.borrado, h.id, h.titulo, h.localidad, h.direccion, h.capacidad, th.nombre as tipoHosp
				FROM MainBundle:Hospedaje h
				INNER JOIN MainBundle:TipoHospedaje th WITH h.tipohospedaje = th.id
				WHERE h.id NOT IN (
				  SELECT r.IDENTITY hospedaje 
				  FROM MainBundle:Reserva r
				  WHERE (r.fechaInicio < :desde AND r.fechaFin > :desde AND r.estado > 0)
				  OR (r.fechaInicio < :hasta AND r.fechaFin > :hasta AND r.estado > 0)
				  OR (r.fechaInicio < :desde AND r.fechaFin > :hasta AND r.estado > 0)
				ORDER BY h.titulo DESC";
        $query = $em->createQuery($dql)
            ->setParameters(['desde'=>$desde, 'hasta'=>$hasta])
            ->setFirstResult($pageSize * ($currentPage - 1))
            ->setMaxResults($pageSize);

        $paginator = new Paginator($query);

        return $paginator;
    }
}
